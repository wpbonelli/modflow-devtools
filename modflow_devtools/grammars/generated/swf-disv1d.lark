// Generated grammar for MF6 SWF-DISV1D component
%import "base.lark"

start: [WS] [_NL*] (block [[WS] _NL*])+ [WS]
block: options_block | dimensions_block | griddata_block | vertices_block | cell1d_block
options_block: "begin"i "options" [_block_index] _NL options_content "end"i "options" [_block_index] _NL+
options_content: (length_units | nogrb | grb_filerecord | xorigin | yorigin | angrot | export_array_ascii | crs)*
dimensions_block: "begin"i "dimensions" [_block_index] _NL dimensions_content "end"i "dimensions" [_block_index] _NL+
dimensions_content: (nodes | nvert)*
griddata_block: "begin"i "griddata" [_block_index] _NL griddata_content "end"i "griddata" [_block_index] _NL+
griddata_content: (width | bottom | idomain)*
vertices_block: "begin"i "vertices" [_block_index] _NL vertices_content "end"i "vertices" [_block_index] _NL+
vertices_content: recarray_line*
cell1d_block: "begin"i "cell1d" [_block_index] _NL cell1d_content "end"i "cell1d" [_block_index] _NL+
cell1d_content: (cell1d)*
length_units: [WS] "length_units" word _NL+
nogrb: [WS] "nogrb" _NL+
grb_filerecord: [WS] "grb_filerecord" word word word _NL+
xorigin: [WS] "xorigin" NUMBER _NL+
yorigin: [WS] "yorigin" NUMBER _NL+
angrot: [WS] "angrot" NUMBER _NL+
export_array_ascii: [WS] "export_array_ascii" _NL+
crs: [WS] "crs" word _NL+
nodes: [WS] "nodes" NUMBER _NL+
nvert: [WS] "nvert" NUMBER _NL+
width: [WS] "width" NUMBER _NL+
bottom: [WS] "bottom" NUMBER _NL+
idomain: [WS] "idomain" NUMBER _NL+
cell1d: [WS] "cell1d" array_format _NL+ array_data
